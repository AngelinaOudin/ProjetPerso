import { ElementRef, EventEmitter, ChangeDetectorRef, QueryList } from '@angular/core';
export declare class ListCellComponent {
    name: any;
    prop: any;
    useTemplate: any;
    headerTemplate: any;
    width: any;
    css: any;
    invisiable: any;
    template: QueryList<any>;
}
export declare class ListComponent {
    private cdr;
    constructor(cdr: ChangeDetectorRef);
    private treetableInstance;
    private _treetable;
    treetable: boolean;
    manual: boolean;
    datetime: any;
    treetableTmp: any;
    innerTemplates: {
        datetime: {};
        treetableTmp: {};
    };
    contentTemplates: any;
    listCellTep: any;
    _cellTemplates: any;
    cellTemplates: ListCellComponent[];
    flat: any;
    templates: {};
    tableWidth: number;
    list: any;
    _totalSize: any;
    totalSize: any;
    _pageSize: number;
    pageSize: number;
    pageIndex: number;
    pageTotalIndex: number;
    container: ElementRef;
    _headers: any;
    headers: any;
    calcHeaders(headers: any): void;
    recalHeader(): void;
    onpage: EventEmitter<{}>;
    refresh(): void;
    loadingStatus: boolean;
    toPage(pageIndex: any): void;
    complete(e: PageEvent): void;
    inputPageIndex: any;
    inputPageKeyUp(e: any): void;
    resizeFn: any;
    ngOnInit(): void;
    ngOnDestroy(): void;
}
export interface PageEvent {
    isFirst: boolean;
    pageIndex: number;
    pageSize: number;
    list: any[];
    totalSize: number;
    complete: (e: PageEvent) => void;
}
