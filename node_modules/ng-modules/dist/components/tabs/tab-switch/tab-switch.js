import { Directive, Input, Renderer2 } from "@angular/core";
import { Output } from "@angular/core";
import { ElementRef } from "@angular/core";
import { EventEmitter } from "@angular/core";
var TabSwitchDirective = (function () {
    function TabSwitchDirective(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.content = null;
        this.enter = new EventEmitter();
        this.leave = new EventEmitter();
        this._checked = false;
    }
    Object.defineProperty(TabSwitchDirective.prototype, "checked", {
        get: function () {
            return this._checked;
        },
        set: function (checked) {
            if (typeof checked == "string") {
                this._checked = true;
            }
            else if (checked) {
                this._checked = true;
            }
            else {
                this._checked = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    TabSwitchDirective.prototype.beforeClick = function () { };
    TabSwitchDirective.prototype.onclick = function () {
        if (!this.content.openStatus) {
            this.beforeClick();
            if (this.content) {
                this.content.open();
            }
            this.checked = true;
            this.renderer.addClass(this.elementRef.nativeElement, "active");
        }
    };
    return TabSwitchDirective;
}());
export { TabSwitchDirective };
TabSwitchDirective.decorators = [
    { type: Directive, args: [{
                selector: "[tabSwitch]",
                host: {
                    "(click)": "onclick()",
                }
            },] },
];
TabSwitchDirective.ctorParameters = function () { return [
    { type: ElementRef, },
    { type: Renderer2, },
]; };
TabSwitchDirective.propDecorators = {
    'enter': [{ type: Output },],
    'leave': [{ type: Output },],
    'name': [{ type: Input, args: ["tabSwitch",] },],
    'checked': [{ type: Input, args: ["checked",] },],
};
//# sourceMappingURL=tab-switch.js.map