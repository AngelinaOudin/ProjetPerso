import { Directive, ViewContainerRef, TemplateRef, Renderer2, ElementRef, Input } from "@angular/core";
var TabContentDirective = (function () {
    function TabContentDirective(viewContainer, templateRef, renderer, elementRef) {
        this.viewContainer = viewContainer;
        this.templateRef = templateRef;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.openStatus = false;
    }
    TabContentDirective.prototype.getRootElement = function () {
        var view = this.viewContainer.get(0);
        var element = view.rootNodes[0];
        return element;
    };
    TabContentDirective.prototype.onopen = function (isFirst) { };
    TabContentDirective.prototype.open = function () {
        if (!this.openStatus) {
            if (!this.inited) {
                this.viewContainer.createEmbeddedView(this.templateRef);
            }
            else {
                var element = this.getRootElement();
                element && this.renderer.removeClass(element, "hide");
                this.viewContainer.get(0).reattach();
            }
            this.openStatus = true;
            this.onopen(this.inited ? false : true);
            this.inited = true;
        }
    };
    TabContentDirective.prototype.onclose = function () { };
    TabContentDirective.prototype.close = function () {
        if (this.openStatus) {
            if (this.inited) {
                var element = this.getRootElement();
                element && this.renderer.addClass(element, "hide");
                this.viewContainer.get(0).detach();
            }
            this.openStatus = false;
            this.onclose();
        }
    };
    return TabContentDirective;
}());
export { TabContentDirective };
TabContentDirective.decorators = [
    { type: Directive, args: [{
                selector: "[tabContent]",
            },] },
];
TabContentDirective.ctorParameters = function () { return [
    { type: ViewContainerRef, },
    { type: TemplateRef, },
    { type: Renderer2, },
    { type: ElementRef, },
]; };
TabContentDirective.propDecorators = {
    'name': [{ type: Input, args: ["tabContent",] },],
};
//# sourceMappingURL=tab-content.js.map