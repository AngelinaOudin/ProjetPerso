import { Component } from "@angular/core";
import { ContentChildren } from "@angular/core";
import { TabContentDirective } from "./tab-content/tab-content";
import { TabSwitchDirective } from "./tab-switch/tab-switch";
var TabsComponent = (function () {
    function TabsComponent() {
    }
    Object.defineProperty(TabsComponent.prototype, "tabContents", {
        get: function () {
            return this._tabContents;
        },
        set: function (list) {
            var _this = this;
            this._tabContents = list;
            if (this._tabSwitchs) {
                setTimeout(function () { return _this.setInstance(); });
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(TabsComponent.prototype, "tabSwitchs", {
        get: function () {
            return this._tabSwitchs;
        },
        set: function (list) {
            var _this = this;
            this._tabSwitchs = list;
            if (this._tabContents) {
                setTimeout(function () { return _this.setInstance(); });
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    TabsComponent.prototype.closeAllContent = function () {
        var contents = this.tabContents.toArray();
        contents.map(function (content) {
            content.close();
        });
        var switchs = this.tabSwitchs.toArray();
        switchs.map(function (item) {
            item.checked = false;
            item.renderer.removeClass(item.elementRef.nativeElement, "active");
        });
    };
    TabsComponent.prototype.setInstance = function () {
        var _this = this;
        var contents = {};
        this.tabContents.toArray().map(function (item, index) {
            contents[item.name || index] = item;
        });
        var switchs = this.tabSwitchs.toArray();
        switchs.map(function (item, index) {
            item.beforeClick = function () {
                _this.closeAllContent();
            };
            item.content = contents[item.name] || contents[index];
            if (item.content) {
                item.content.onclose = function () {
                    item.leave.emit();
                };
                item.content.onopen = function (isFirst) {
                    item.enter.emit(isFirst);
                };
            }
        });
        this.findDefaultTab();
    };
    TabsComponent.prototype.findDefaultTab = function () {
        var switchs = this.tabSwitchs.toArray();
        if (!switchs.some(function (item) {
            if (item.checked) {
                item.onclick();
                return true;
            }
        })) {
            var switchItem = switchs[0];
            switchItem.onclick();
        }
    };
    TabsComponent.prototype.checkedIndex = function () {
        var switchs = this.tabSwitchs.toArray();
        var index = 0;
        switchs.some(function (item, i) {
            if (item.checked) {
                index = i;
                return true;
            }
        });
        return index;
    };
    TabsComponent.prototype.selectedByIndex = function (index) {
        var switchs = this.tabSwitchs.toArray();
        var switchItem = switchs[index];
        switchItem.onclick();
    };
    TabsComponent.prototype.ngOnInit = function () {
    };
    return TabsComponent;
}());
export { TabsComponent };
TabsComponent.decorators = [
    { type: Component, args: [{
                template: "<ng-content></ng-content> ",
                styles: [""],
                selector: "tabs",
            },] },
];
TabsComponent.ctorParameters = function () { return []; };
TabsComponent.propDecorators = {
    'tabContents': [{ type: ContentChildren, args: [TabContentDirective,] },],
    'tabSwitchs': [{ type: ContentChildren, args: [TabSwitchDirective,] },],
};
//# sourceMappingURL=tabs.js.map