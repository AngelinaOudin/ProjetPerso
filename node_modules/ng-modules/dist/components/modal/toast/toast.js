import { Component, ViewChildren } from "@angular/core";
import { AnimationProvider } from "../../../providers/animation/animation";
import { ChangeDetectorRef } from "@angular/core";
var ToastComponent = (function () {
    function ToastComponent(animationProvider, cdr) {
        this.animationProvider = animationProvider;
        this.cdr = cdr;
        this.text = '';
        this.rightBC = [];
        this.rightTC = [];
        this.centerTC = [];
        this.centerCC = [];
        this.centerBC = [];
        this.leftTC = [];
        this.leftBC = [];
    }
    ToastComponent.prototype.ngOnInit = function () {
        ToastComponent.Instance = this;
    };
    ToastComponent.prototype.calcMsgType = function (option) {
        switch (option.type) {
            case "success":
                _a = [option.backgroundColor || "#27AE60", option.color || "#fff", option.icon || "fa-thumbs-o-up"], option.backgroundColor = _a[0], option.color = _a[1], option.icon = _a[2];
                break;
            case "info":
                _b = [option.backgroundColor || "#3498DB", option.color || "#fff", option.icon || "fa-smile-o"], option.backgroundColor = _b[0], option.color = _b[1], option.icon = _b[2];
                break;
            case "error":
                _c = [option.backgroundColor || "#E74C3C", option.color || "#fff", option.icon || "fa-frown-o"], option.backgroundColor = _c[0], option.color = _c[1], option.icon = _c[2];
                break;
            case "warning":
                _d = [option.backgroundColor || "#D35400", option.color || "#fff", option.icon || "fa-meh-o"], option.backgroundColor = _d[0], option.color = _d[1], option.icon = _d[2];
                break;
            default:
                _e = [option.backgroundColor || "#27AE60", option.color || "#fff", option.icon || "fa-smile-o"], option.backgroundColor = _e[0], option.color = _e[1], option.icon = _e[2];
                break;
        }
        var _a, _b, _c, _d, _e;
    };
    ToastComponent.prototype.checkPosition = function (option) {
        var data = [
            [this.rightTC, "rt", -1, this.rtcDom],
            [this.rightBC, "rb", 1, this.rbcDom],
            [this.centerTC, "ct", -1, this.ctcDom],
            [this.centerCC, "cc", 0, this.cccDom],
            [this.centerBC, "cb", 1, this.cbcDom],
            [this.leftTC, "lt", -1, this.ltcDom],
            [this.leftBC, "lb", 1, this.lbcDom],
        ];
        var positionData;
        data.some(function (item) {
            if (option.position == item[1]) {
                positionData = item;
                return true;
            }
        });
        return positionData;
    };
    ToastComponent.prototype.calcPosition = function (option, list, type, direction, domList) {
        var _this = this;
        option.style = {
            'background-color': option.backgroundColor,
            'color': option.color,
        };
        var index;
        if (direction == -1) {
            index = 0;
            list.unshift(option);
        }
        else if (direction == 1) {
            index = list.push(option) - 1;
        }
        var subscribe = domList.changes.subscribe(function () {
            return setTimeout(function () {
                subscribe.unsubscribe();
                var dom = domList.toArray()[index];
                option.dom = dom;
                var contentDom = dom.nativeElement.getElementsByClassName("content")[0];
                if (type == "ct" || type == "cb") {
                    var contentWidth = contentDom.clientWidth;
                    if (contentWidth > 650) {
                        contentDom.style.width = '650px';
                    }
                    option.style.width = contentDom.clientWidth + 40 + 24 + 'px';
                    _this.animationProvider.fadeIn(dom.nativeElement);
                }
                var contentHeight = contentDom.clientHeight;
                option.height = contentHeight + 10;
                option.ready = true;
                option.style.height = option.height + "px";
                if (direction == 1) {
                    for (var i = index - 1; i >= 0; i--) {
                        var o_option = list[i];
                        var bottom = parseFloat(o_option.style.bottom || 0) + option.height + 16;
                        o_option.style.bottom = bottom + "px";
                    }
                }
                else if (direction == -1) {
                    for (var i = index + 1; i < list.length; i++) {
                        var o_option = list[i];
                        var top_1 = parseFloat(o_option.style.top || 0) + option.height + 16;
                        o_option.style.top = top_1 + "px";
                    }
                }
                option.close = function () {
                    clearTimeout(option.timeoutFn);
                    if (direction == 1) {
                        for (var i = 0;; i++) {
                            var o_option = list[i];
                            var bottom = parseFloat(o_option.style.bottom || 0) - option.height - 16;
                            o_option.style.bottom = bottom + "px";
                            if (o_option == option) {
                                list.splice(i, 1);
                                break;
                            }
                        }
                    }
                    else if (direction == -1) {
                        for (var i = list.length - 1;; i--) {
                            var o_option = list[i];
                            var top_2 = parseFloat(o_option.style.top || 0) - option.height - 16;
                            o_option.style.top = top_2 + "px";
                            if (o_option == option) {
                                list.splice(i, 1);
                                break;
                            }
                        }
                    }
                };
                option.timeoutFn = setTimeout(function () {
                    option.close();
                }, (option.timeout * 1000 || 0));
                _this.cdr.detectChanges();
            }, 0);
        });
    };
    ToastComponent.prototype.create = function (option) {
        if (!option.content)
            return;
        if (!option.position)
            option.position = "rb";
        this.calcMsgType(option);
        if (typeof option.timeout == "undefined")
            option.timeout = 3;
        var data = this.checkPosition(option);
        data.unshift(option);
        this.calcPosition.apply(this, data);
    };
    return ToastComponent;
}());
export { ToastComponent };
ToastComponent.Instance = null;
ToastComponent.decorators = [
    { type: Component, args: [{
                template: "<div class=\"toast-container\"> <!-- \u53F3\u4E0B\u89D2 --> <div class=\"toast-area-right-bottom\" *ngIf=\"rightBC.length\"> <div class=\"toast-card\" [class.has-icon]=\"item.icon\" #rbcDom *ngFor=\"let item of rightBC\" [class.show]=\"item.ready\" [ngStyle]=\"item.style\"> <div [class]=\"'toast-icon fa '+item.icon\"></div> <div class=\"content\" [innerHTML]=\"item.content\"></div> <div class=\"toast-close\" [title]=\"'__4' | I18N\" (click)=\"item.close()\">\u00D7</div> </div> </div> <!-- \u53F3\u4E0B\u89D2\u7ED3\u675F --> <!-- \u53F3\u4E0A\u89D2 --> <div class=\"toast-area-right-top\" *ngIf=\"rightTC.length\"> <div class=\"toast-card\" [class.has-icon]=\"item.icon\" #rtcDom *ngFor=\"let item of rightTC\" [class.show]=\"item.ready\" [ngStyle]=\"item.style\"> <div [class]=\"'toast-icon fa '+item.icon\"></div> <div class=\"content\" [innerHTML]=\"item.content\"></div> <div class=\"toast-close\" [title]=\"'__4' | I18N\" (click)=\"item.close()\">\u00D7</div> </div> </div> <!-- \u53F3\u4E0A\u89D2\u7ED3\u675F --> <!-- \u5DE6\u4E0B\u89D2 --> <div class=\"toast-area-left-bottom\" *ngIf=\"leftBC.length\"> <div class=\"toast-card\" [class.has-icon]=\"item.icon\" #lbcDom *ngFor=\"let item of leftBC\" [class.show]=\"item.ready\" [ngStyle]=\"item.style\"> <div [class]=\"'toast-icon fa '+item.icon\"></div> <div class=\"content\" [innerHTML]=\"item.content\"></div> <div class=\"toast-close\" [title]=\"'__4' | I18N\" (click)=\"item.close()\">\u00D7</div> </div> </div> <!-- \u5DE6\u4E0B\u89D2\u7ED3\u675F --> <!-- \u5DE6\u4E0A\u89D2 --> <div class=\"toast-area-left-top\" *ngIf=\"leftTC.length\"> <div class=\"toast-card\" [class.has-icon]=\"item.icon\" #ltcDom *ngFor=\"let item of leftTC\" [class.show]=\"item.ready\" [ngStyle]=\"item.style\"> <div [class]=\"'toast-icon fa '+item.icon\"></div> <div class=\"content\" [innerHTML]=\"item.content\"></div> <div class=\"toast-close\" [title]=\"'__4' | I18N\" (click)=\"item.close()\">\u00D7</div> </div> </div> <!-- \u5DE6\u4E0A\u89D2\u7ED3\u675F --> <!-- \u4E2D\u4E0A --> <div class=\"toast-area-center-top\" *ngIf=\"centerTC.length\"> <div class=\"toast-card\" [class.has-icon]=\"item.icon\" #ctcDom *ngFor=\"let item of centerTC\" [class.show]=\"item.ready\" [ngStyle]=\"item.style\"> <div [class]=\"'toast-icon fa '+item.icon\"></div> <div class=\"content\" [innerHTML]=\"item.content\"></div> <div class=\"toast-close\" [title]=\"'__4' | I18N\" (click)=\"item.close()\">\u00D7</div> </div> </div> <!-- \u4E2D\u4E0A --> <!-- \u4E2D\u4E0B --> <div class=\"toast-area-center-bottom\" *ngIf=\"centerBC.length\"> <div class=\"toast-card\" [class.has-icon]=\"item.icon\" #cbcDom *ngFor=\"let item of centerBC\" [class.show]=\"item.ready\" [ngStyle]=\"item.style\"> <div [class]=\"'toast-icon fa '+item.icon\"></div> <div class=\"content\" [innerHTML]=\"item.content\"></div> <div class=\"toast-close\" [title]=\"'__4' | I18N\" (click)=\"item.close()\">\u00D7</div> </div> </div> <!-- \u4E2D\u4E0B --> </div> ",
                styles: [".toast-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  pointer-events: none;\n}\n.toast-container .toast-area-right-bottom,\n.toast-container .toast-area-right-top,\n.toast-container .toast-area-left-bottom,\n.toast-container .toast-area-left-top {\n  width: 260px;\n  position: absolute;\n  right: 16px;\n  bottom: 16px;\n}\n.toast-container .toast-area-right-bottom .toast-card,\n.toast-container .toast-area-right-top .toast-card,\n.toast-container .toast-area-left-bottom .toast-card,\n.toast-container .toast-area-left-top .toast-card {\n  visibility: hidden;\n  pointer-events: all;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  background-color: #27AE60;\n  color: #fff;\n  padding: 5px;\n  padding-right: 18px;\n  border-radius: 2px;\n  box-shadow: 0 0 10px #bfbfbf;\n  transition: all ease 0.3s;\n  user-select: none;\n}\n.toast-container .toast-area-right-bottom .toast-card.show,\n.toast-container .toast-area-right-top .toast-card.show,\n.toast-container .toast-area-left-bottom .toast-card.show,\n.toast-container .toast-area-left-top .toast-card.show {\n  visibility: visible;\n}\n.toast-container .toast-area-right-bottom .toast-card.has-icon,\n.toast-container .toast-area-right-top .toast-card.has-icon,\n.toast-container .toast-area-left-bottom .toast-card.has-icon,\n.toast-container .toast-area-left-top .toast-card.has-icon {\n  padding-left: 40px;\n}\n.toast-container .toast-area-right-bottom .toast-card .toast-icon,\n.toast-container .toast-area-right-top .toast-card .toast-icon,\n.toast-container .toast-area-left-bottom .toast-card .toast-icon,\n.toast-container .toast-area-left-top .toast-card .toast-icon {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 40px;\n  width: 40px;\n  font-size: 26px;\n  line-height: 40px;\n  text-align: center;\n  bottom: 0;\n  margin: auto;\n}\n.toast-container .toast-area-right-bottom .toast-card .content,\n.toast-container .toast-area-right-top .toast-card .content,\n.toast-container .toast-area-left-bottom .toast-card .content,\n.toast-container .toast-area-left-top .toast-card .content {\n  font-size: 14px;\n}\n.toast-container .toast-area-right-bottom .toast-card .toast-close,\n.toast-container .toast-area-right-top .toast-card .toast-close,\n.toast-container .toast-area-left-bottom .toast-card .toast-close,\n.toast-container .toast-area-left-top .toast-card .toast-close {\n  font-family: serif;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n}\n.toast-container .toast-area-right-top {\n  right: 16px;\n  top: 16px;\n  bottom: auto;\n}\n.toast-container .toast-area-right-top .toast-card {\n  bottom: auto;\n  top: 0;\n}\n.toast-container .toast-area-left-top {\n  left: 16px;\n  right: auto;\n  top: 16px;\n  bottom: auto;\n}\n.toast-container .toast-area-left-top .toast-card {\n  bottom: auto;\n  top: 0;\n}\n.toast-container .toast-area-left-bottom {\n  left: 16px;\n  right: auto;\n  top: auto;\n  bottom: 16px;\n}\n.toast-container .toast-area-left-bottom .toast-card {\n  bottom: 0;\n  top: auto;\n}\n.toast-container .toast-area-center-top,\n.toast-container .toast-area-center-bottom {\n  position: absolute;\n  top: 32px;\n  width: 750px;\n  left: 0;\n  right: 0;\n  margin: auto;\n}\n.toast-container .toast-area-center-top .toast-card,\n.toast-container .toast-area-center-bottom .toast-card {\n  left: 0;\n  right: 0;\n  margin: auto;\n  visibility: hidden;\n  pointer-events: all;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  background-color: #27AE60;\n  color: #fff;\n  padding: 2px;\n  padding-right: 18px;\n  border-radius: 2px;\n  box-shadow: 0 0 10px #bfbfbf;\n  transition-property: height, margin-top, margin-bottom, padding-top, padding-bottom;\n  transition-duration: 0.3s;\n  transition-timing-function: ease;\n  user-select: none;\n}\n.toast-container .toast-area-center-top .toast-card.show,\n.toast-container .toast-area-center-bottom .toast-card.show {\n  visibility: visible;\n}\n.toast-container .toast-area-center-top .toast-card.has-icon,\n.toast-container .toast-area-center-bottom .toast-card.has-icon {\n  padding-left: 40px;\n}\n.toast-container .toast-area-center-top .toast-card .toast-icon,\n.toast-container .toast-area-center-bottom .toast-card .toast-icon {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 40px;\n  width: 40px;\n  font-size: 26px;\n  line-height: 40px;\n  text-align: center;\n  bottom: 0;\n  margin: auto;\n}\n.toast-container .toast-area-center-top .toast-card .content,\n.toast-container .toast-area-center-bottom .toast-card .content {\n  display: inline-block;\n  font-size: 14px;\n  padding: 0 5px;\n}\n.toast-container .toast-area-center-top .toast-card .toast-close,\n.toast-container .toast-area-center-bottom .toast-card .toast-close {\n  font-family: serif;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n}\n.toast-container .toast-area-center-bottom {\n  top: auto;\n  bottom: 32px;\n}\n.toast-container .toast-area-center-bottom .toast-card {\n  top: auto;\n  bottom: 0;\n}"],
                selector: "toast-view",
            },] },
];
ToastComponent.ctorParameters = function () { return [
    { type: AnimationProvider, },
    { type: ChangeDetectorRef, },
]; };
ToastComponent.propDecorators = {
    'rbcDom': [{ type: ViewChildren, args: ["rbcDom",] },],
    'rtcDom': [{ type: ViewChildren, args: ["rtcDom",] },],
    'ctcDom': [{ type: ViewChildren, args: ["ctcDom",] },],
    'cccDom': [{ type: ViewChildren, args: ["cccDom",] },],
    'cbcDom': [{ type: ViewChildren, args: ["cbcDom",] },],
    'ltcDom': [{ type: ViewChildren, args: ["ltcDom",] },],
    'lbcDom': [{ type: ViewChildren, args: ["lbcDom",] },],
};
//# sourceMappingURL=toast.js.map