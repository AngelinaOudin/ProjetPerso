import { Injectable } from "@angular/core";
import { style, animate, keyframes } from '@angular/animations';
import { AnimationBuilder } from '@angular/animations';
var AnimationProvider = (function () {
    function AnimationProvider(animationBuilder) {
        this.animationBuilder = animationBuilder;
    }
    AnimationProvider.prototype.bounceIn = function (element) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var animation = _this.animationBuilder.build([
                animate(".4s", keyframes([
                    style({
                        'animation-timing-function': "cubic-bezier(0.215, 0.610, 0.355, 1.000)",
                        opacity: 0, transform: "scale3d(.3, .3, .3)"
                    }),
                    style({
                        'animation-timing-function': "cubic-bezier(0.215, 0.610, 0.355, 1.000)",
                        opacity: 0.2, transform: "scale3d(1.1, 1.1, 1.1)"
                    }),
                    style({
                        'animation-timing-function': "cubic-bezier(0.215, 0.610, 0.355, 1.000)",
                        opacity: 0.4, transform: "scale3d(.9, .9, .9)"
                    }),
                    style({
                        'animation-timing-function': "cubic-bezier(0.215, 0.610, 0.355, 1.000)",
                        opacity: .6, transform: "scale3d(1.03, 1.03, 1.03)"
                    }),
                    style({
                        'animation-timing-function': "cubic-bezier(0.215, 0.610, 0.355, 1.000)",
                        opacity: .8, transform: "scale3d(.97, .97, .97)"
                    }),
                    style({
                        'animation-timing-function': "cubic-bezier(0.215, 0.610, 0.355, 1.000)",
                        opacity: 1, transform: "scale3d(1, 1, 1)"
                    }),
                ]))
            ]);
            var player = animation.create(element);
            player.onDone(resolve);
            player.play();
        });
    };
    AnimationProvider.prototype.pulse = function (element) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var animation = _this.animationBuilder.build([
                animate("1s ease", keyframes([
                    style({ transform: "scale3d(1, 1, 1)" }),
                    style({ transform: "scale3d(1.05, 1.05, 1.05)" }),
                    style({ transform: "scale3d(1, 1, 1)" }),
                ]))
            ]);
            var player = animation.create(element);
            player.onDone(resolve);
            player.play();
        });
    };
    AnimationProvider.prototype.shake = function (element) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var animation = _this.animationBuilder.build([
                animate("1s ease", keyframes([
                    style({ transform: "translate3d(0, 0, 0)" }),
                    style({ transform: "translate3d(-10px, 0, 0)" }),
                    style({ transform: "translate3d(10px, 0, 0)" }),
                    style({ transform: "translate3d(-10px, 0, 0)" }),
                    style({ transform: "translate3d(10px, 0, 0)" }),
                    style({ transform: "translate3d(-10px, 0, 0)" }),
                    style({ transform: "translate3d(10px, 0, 0)" }),
                    style({ transform: "translate3d(-10px, 0, 0)" }),
                    style({ transform: "translate3d(10px, 0, 0)" }),
                    style({ transform: "translate3d(-10px, 0, 0)" }),
                    style({ transform: "translate3d(0, 0, 0)" }),
                ]))
            ]);
            var player = animation.create(element);
            player.onDone(resolve);
            player.play();
        });
    };
    AnimationProvider.prototype.fadeOut = function (element) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var animation = _this.animationBuilder.build([
                animate("1s ease", keyframes([
                    style({ opacity: 1 }),
                    style({ opacity: 0 }),
                ]))
            ]);
            var player = animation.create(element);
            player.onDone(resolve);
            player.play();
        });
    };
    AnimationProvider.prototype.fadeIn = function (element) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var animation = _this.animationBuilder.build([
                animate("1s ease", keyframes([
                    style({ opacity: 0 }),
                    style({ opacity: 1 }),
                ]))
            ]);
            var player = animation.create(element);
            player.onDone(resolve);
            player.play();
        });
    };
    return AnimationProvider;
}());
export { AnimationProvider };
AnimationProvider.decorators = [
    { type: Injectable },
];
AnimationProvider.ctorParameters = function () { return [
    { type: AnimationBuilder, },
]; };
//# sourceMappingURL=animation.js.map